---
 - name: Playbook to install Sonarqube on Sonarqube server
   hosts: sonarqubeserver
   remote_user: ubuntu
   become: yes
   become_method: sudo
   become_user: root
   gather_facts: yes
   connection: ssh

   tasks:
           - name: Update the server
             shell: |
                     apt-get update
             args:
                     warn: false

           - name: Adding PostgresSQL repository
             shell: |
                     echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
                     wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null

           - name: Update the server again
             shell: |
                     apt-get update
             args:
                     warn: false

           - name: Install postgresql, postgresql-contrib, python2, openjdk-17-jdk, openjdk-17-jre, unzip
             apt:
                     name: "{{item}}"
                     state: present
             loop:
                     - postgresql
                     - postgresql-contrib
                     - python2
                     - openjdk-17-jdk
                     - openjdk-17-jre
                     - unzip

           - name: Copying systemctl file
             copy:
                     src: conf/systemctl.py
                     dest: /usr/bin/systemctl

           - name: Running some extra steps
             shell: |
                     chmod 755 /usr/bin/systemctl
                     sudo systemctl daemon-reload
             args:
                     warn: false
          
           - name: starting the postgresql service
             service:
                     name: postgresql
                     state: started

           - name: Setting up postgres database
             shell: |
                     echo 'postgres:test123' | chpasswd

           - name: Setting up postgres database
             shell: |
                     echo 'postgres:test123' | chpasswd
                     runuser -l postgres -c 'createuser sonar'
                     runuser -l postgres -c 'psql -U postgres -c "ALTER USER sonar WITH ENCRYPTED password 'sonar';"'
                     runuser -l postgres -c 'psql -U postgres -c "CREATE DATABASE sonarqube OWNER sonar;"'
                     runuser -l postgres -c 'psql -U postgres -c "grant all privileges on DATABASE sonarqube to sonar;"'

           - name: Configuring the limits.conf file
             blockinfile: |
                     dest=/etc/security/limits.conf backup=yes
                     content="sonarqube   -   nofile   65536
                     sonarqube   -   nproc    4096"

           - name: Configuring sysctl.conf file
             blockinfile: |
                     dest=/etc/sysctl.conf backup=yes
                     content="vm.max_map_count = 262144"

           - name: Running extra command to configure vm.max_map_count and verify with command 'sysctl vm.max_map_count'
             shell: |
                     sysctl -w vm.max_map_count=262144

           - name: Running extra command to configure sonarqube
             shell: |
                     sudo wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.0.65466.zip
                     sudo unzip sonarqube-9.9.0.65466.zip -d /opt
                     sudo mv /opt/sonarqube-9.9.0.65466 /opt/sonarqube

           - name: Adding sonar group
             group:
                     name: sonar
                     state: present

           - name: Adding sonar user
             user:
                     name: sonar
                     comment: user to run SonarQube
                     shell: /bin/bash
                     group: sonar
                     home: /opt/sonarqube

           - name: Setting up permission for /opt/sonarqube dir
             shell: |
                     sudo chown sonar:sonar /opt/sonarqube -R

           - name: Configuring sonar.properties file
             blockinfile: |
                     dest=/opt/sonarqube/conf/sonar.properties backup=yes
                     content="sonar.jdbc.username=sonar
                     sonar.jdbc.password=sonar
                     sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonarqube"

           - name: Copying sonar service file
             copy:
                     src: conf/sonar.service
                     dest: /etc/systemd/system/sonar.service

           - name: Starting the sonarqube service
             systemd:
                     name: sonar
                     state: started


